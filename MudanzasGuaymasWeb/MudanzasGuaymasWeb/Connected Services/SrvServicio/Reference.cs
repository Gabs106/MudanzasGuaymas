//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MudanzasGuaymasWeb.SrvServicio {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Servicio", Namespace="http://schemas.datacontract.org/2004/07/MudanzasGuaymasServices.Entity")]
    [System.SerializableAttribute()]
    public partial class Servicio : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescripcionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImagenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> MostrarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descripcion {
            get {
                return this.DescripcionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescripcionField, value) != true)) {
                    this.DescripcionField = value;
                    this.RaisePropertyChanged("Descripcion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Imagen {
            get {
                return this.ImagenField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagenField, value) != true)) {
                    this.ImagenField = value;
                    this.RaisePropertyChanged("Imagen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Mostrar {
            get {
                return this.MostrarField;
            }
            set {
                if ((this.MostrarField.Equals(value) != true)) {
                    this.MostrarField = value;
                    this.RaisePropertyChanged("Mostrar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SrvServicio.ISrvServicio")]
    public interface ISrvServicio {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISrvServicio/Insertar", ReplyAction="http://tempuri.org/ISrvServicio/InsertarResponse")]
        bool Insertar(MudanzasGuaymasWeb.SrvServicio.Servicio servicio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISrvServicio/Insertar", ReplyAction="http://tempuri.org/ISrvServicio/InsertarResponse")]
        System.Threading.Tasks.Task<bool> InsertarAsync(MudanzasGuaymasWeb.SrvServicio.Servicio servicio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISrvServicio/Editar", ReplyAction="http://tempuri.org/ISrvServicio/EditarResponse")]
        void Editar(MudanzasGuaymasWeb.SrvServicio.Servicio servicio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISrvServicio/Editar", ReplyAction="http://tempuri.org/ISrvServicio/EditarResponse")]
        System.Threading.Tasks.Task EditarAsync(MudanzasGuaymasWeb.SrvServicio.Servicio servicio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISrvServicio/Eliminar", ReplyAction="http://tempuri.org/ISrvServicio/EliminarResponse")]
        bool Eliminar(MudanzasGuaymasWeb.SrvServicio.Servicio servicio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISrvServicio/Eliminar", ReplyAction="http://tempuri.org/ISrvServicio/EliminarResponse")]
        System.Threading.Tasks.Task<bool> EliminarAsync(MudanzasGuaymasWeb.SrvServicio.Servicio servicio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISrvServicio/ConsultarTodos", ReplyAction="http://tempuri.org/ISrvServicio/ConsultarTodosResponse")]
        MudanzasGuaymasWeb.SrvServicio.Servicio[] ConsultarTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISrvServicio/ConsultarTodos", ReplyAction="http://tempuri.org/ISrvServicio/ConsultarTodosResponse")]
        System.Threading.Tasks.Task<MudanzasGuaymasWeb.SrvServicio.Servicio[]> ConsultarTodosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISrvServicio/ConsultarPorNombre", ReplyAction="http://tempuri.org/ISrvServicio/ConsultarPorNombreResponse")]
        MudanzasGuaymasWeb.SrvServicio.Servicio[] ConsultarPorNombre(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISrvServicio/ConsultarPorNombre", ReplyAction="http://tempuri.org/ISrvServicio/ConsultarPorNombreResponse")]
        System.Threading.Tasks.Task<MudanzasGuaymasWeb.SrvServicio.Servicio[]> ConsultarPorNombreAsync(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISrvServicio/ConsultarPorId", ReplyAction="http://tempuri.org/ISrvServicio/ConsultarPorIdResponse")]
        MudanzasGuaymasWeb.SrvServicio.Servicio ConsultarPorId(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISrvServicio/ConsultarPorId", ReplyAction="http://tempuri.org/ISrvServicio/ConsultarPorIdResponse")]
        System.Threading.Tasks.Task<MudanzasGuaymasWeb.SrvServicio.Servicio> ConsultarPorIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISrvServicio/agregarImagen", ReplyAction="http://tempuri.org/ISrvServicio/agregarImagenResponse")]
        void agregarImagen(string id, string imagenBase64);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISrvServicio/agregarImagen", ReplyAction="http://tempuri.org/ISrvServicio/agregarImagenResponse")]
        System.Threading.Tasks.Task agregarImagenAsync(string id, string imagenBase64);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISrvServicioChannel : MudanzasGuaymasWeb.SrvServicio.ISrvServicio, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SrvServicioClient : System.ServiceModel.ClientBase<MudanzasGuaymasWeb.SrvServicio.ISrvServicio>, MudanzasGuaymasWeb.SrvServicio.ISrvServicio {
        
        public SrvServicioClient() {
        }
        
        public SrvServicioClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SrvServicioClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SrvServicioClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SrvServicioClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Insertar(MudanzasGuaymasWeb.SrvServicio.Servicio servicio) {
            return base.Channel.Insertar(servicio);
        }
        
        public System.Threading.Tasks.Task<bool> InsertarAsync(MudanzasGuaymasWeb.SrvServicio.Servicio servicio) {
            return base.Channel.InsertarAsync(servicio);
        }
        
        public void Editar(MudanzasGuaymasWeb.SrvServicio.Servicio servicio) {
            base.Channel.Editar(servicio);
        }
        
        public System.Threading.Tasks.Task EditarAsync(MudanzasGuaymasWeb.SrvServicio.Servicio servicio) {
            return base.Channel.EditarAsync(servicio);
        }
        
        public bool Eliminar(MudanzasGuaymasWeb.SrvServicio.Servicio servicio) {
            return base.Channel.Eliminar(servicio);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarAsync(MudanzasGuaymasWeb.SrvServicio.Servicio servicio) {
            return base.Channel.EliminarAsync(servicio);
        }
        
        public MudanzasGuaymasWeb.SrvServicio.Servicio[] ConsultarTodos() {
            return base.Channel.ConsultarTodos();
        }
        
        public System.Threading.Tasks.Task<MudanzasGuaymasWeb.SrvServicio.Servicio[]> ConsultarTodosAsync() {
            return base.Channel.ConsultarTodosAsync();
        }
        
        public MudanzasGuaymasWeb.SrvServicio.Servicio[] ConsultarPorNombre(string nombre) {
            return base.Channel.ConsultarPorNombre(nombre);
        }
        
        public System.Threading.Tasks.Task<MudanzasGuaymasWeb.SrvServicio.Servicio[]> ConsultarPorNombreAsync(string nombre) {
            return base.Channel.ConsultarPorNombreAsync(nombre);
        }
        
        public MudanzasGuaymasWeb.SrvServicio.Servicio ConsultarPorId(string id) {
            return base.Channel.ConsultarPorId(id);
        }
        
        public System.Threading.Tasks.Task<MudanzasGuaymasWeb.SrvServicio.Servicio> ConsultarPorIdAsync(string id) {
            return base.Channel.ConsultarPorIdAsync(id);
        }
        
        public void agregarImagen(string id, string imagenBase64) {
            base.Channel.agregarImagen(id, imagenBase64);
        }
        
        public System.Threading.Tasks.Task agregarImagenAsync(string id, string imagenBase64) {
            return base.Channel.agregarImagenAsync(id, imagenBase64);
        }
    }
}
