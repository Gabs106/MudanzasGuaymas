//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestEjemploPlebes2017.SrvSesion {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SrvSesion.ISrvSesion")]
    public interface ISrvSesion {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISrvSesion/Encriptar", ReplyAction="http://tempuri.org/ISrvSesion/EncriptarResponse")]
        string Encriptar(string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISrvSesion/Encriptar", ReplyAction="http://tempuri.org/ISrvSesion/EncriptarResponse")]
        System.Threading.Tasks.Task<string> EncriptarAsync(string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISrvSesion/Desencriptar", ReplyAction="http://tempuri.org/ISrvSesion/DesencriptarResponse")]
        string Desencriptar(string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISrvSesion/Desencriptar", ReplyAction="http://tempuri.org/ISrvSesion/DesencriptarResponse")]
        System.Threading.Tasks.Task<string> DesencriptarAsync(string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISrvSesion/Logout", ReplyAction="http://tempuri.org/ISrvSesion/LogoutResponse")]
        bool Logout();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISrvSesion/Logout", ReplyAction="http://tempuri.org/ISrvSesion/LogoutResponse")]
        System.Threading.Tasks.Task<bool> LogoutAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISrvSesion/Login", ReplyAction="http://tempuri.org/ISrvSesion/LoginResponse")]
        bool Login(string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISrvSesion/Login", ReplyAction="http://tempuri.org/ISrvSesion/LoginResponse")]
        System.Threading.Tasks.Task<bool> LoginAsync(string password, string email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISrvSesionChannel : TestEjemploPlebes2017.SrvSesion.ISrvSesion, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SrvSesionClient : System.ServiceModel.ClientBase<TestEjemploPlebes2017.SrvSesion.ISrvSesion>, TestEjemploPlebes2017.SrvSesion.ISrvSesion {
        
        public SrvSesionClient() {
        }
        
        public SrvSesionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SrvSesionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SrvSesionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SrvSesionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Encriptar(string password) {
            return base.Channel.Encriptar(password);
        }
        
        public System.Threading.Tasks.Task<string> EncriptarAsync(string password) {
            return base.Channel.EncriptarAsync(password);
        }
        
        public string Desencriptar(string password) {
            return base.Channel.Desencriptar(password);
        }
        
        public System.Threading.Tasks.Task<string> DesencriptarAsync(string password) {
            return base.Channel.DesencriptarAsync(password);
        }
        
        public bool Logout() {
            return base.Channel.Logout();
        }
        
        public System.Threading.Tasks.Task<bool> LogoutAsync() {
            return base.Channel.LogoutAsync();
        }
        
        public bool Login(string password, string email) {
            return base.Channel.Login(password, email);
        }
        
        public System.Threading.Tasks.Task<bool> LoginAsync(string password, string email) {
            return base.Channel.LoginAsync(password, email);
        }
    }
}
